{"version":3,"sources":["components/Button/Button.js","components/SearchInput/search.svg","components/SearchInput/SearchInput.js","components/Message/Message.js","constants/index.js","constants/constantsTable.js","components/Table/Cell/Cell.js","components/Table/filter.svg","components/Table/Column/Column.js","components/Table/Table.js","api/apiTable.js","util/utilTable.js","store/types/index.js","store/types/tableTypes.js","store/reducers/reducerTable.js","store/reducers/index.js","store/selectors/index.js","store/selectors/selectorsTable.js","store/action-creators/index.js","store/action-creators/actionCreatorsTable.js","store/index.js","components/Main/Main.js","hooks/useSelectNameActiveRow.js","hooks/useSelectFilterAndSortMatrixData.js","App.js","reportWebVitals.js","index.js","components/Main/Main.module.css"],"names":["Button","text","onClick","className","SearchInput","value","onChange","onKeypress","placeholder","src","svgSearch","alt","e","target","onKeyPress","Message","constants","positionColumn","LEFT","CENTER","sortColumn","NONE","ASCEDING","DESCEDING","Cell","id","isCenter","Column","filter","position","metaData","arrColumnData","arrRowId","titleColumn","typeFilter","svgFilter","map","i","Table","arrMetaData","matrixColumnData","onClickHeaderColumn","onClickCell","idRow","onClickTable","useCallback","headerCell","closest","tableColumn","dataset","cell","length","apiTable","fetch","responce","json","utilTable","transformApiDataToTableData","apiData","this","getArrMetaDataByApiData","getMatrixDataByApiData","tariffs_list","brandAndModel","tariffsColumms","cars","forEach","car","push","mark","model","tariff","undefined","Object","keys","tariffs","indexTariff","indexOf","year","sortMatrixData","resMatrix","transpose","reverse","indexColumn","sort","row1","row2","resCompareCell","compareCell","matrix","j","cell1","cell2","filterMatrixData","searchField","lowerSearchField","toLowerCase","row","some","cellValue","lowerCell","String","includes","typeActions","CHANGE_ALL_DATA_WITHOUT_FILTERS","TOGGLE_FILTER","CHANGE_SEARCH_FIELD","CHANGE_ACTIVE_ROW_ID","initialState","activeRowId","reducers","combineReducers","reducerTable","state","action","type","data","selectors","getTableArrMetaData","getTableMatrixColumnData","getSearchField","getActiveRowId","actionCreators","changeAllDataWithoutFilters","toggleFilter","changeSearchField","changeActiveRowId","store","createStore","Main","useSelector","searchFieldStore","acriveRow","indexRow","findIndex","markAndModel","minYear","Math","min","useSelectNameActiveRow","useMemo","useSelectFilterAndSortMatrixData","useState","dispatch","useDispatch","changeSearchFieldStore","useEffect","a","search","style","Main__container","searchField__input","key","Main__table","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d52c1c88.chunk.js","sourcesContent":["import \"./Button.css\";\r\n\r\nconst Button = ({text, onClick}) => {\r\n    return (\r\n        <button className=\"Button\" onClick={onClick}>\r\n            { text }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/search.e98153e6.svg\";","import \"./SearchInput.css\";\r\nimport svgSearch from './search.svg';\r\n\r\nconst SearchInput = ({value, onChange, onKeypress, placeholder}) => {\r\n    const onChangeHandler = (e) => {\r\n        onChange(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"SearchInput\">\r\n            <img className=\"SearchInput__image\" src={svgSearch} alt=\"search\"/>\r\n            <input\r\n                className=\"SearchInput__input\"\r\n                value={value}\r\n                onChange={onChangeHandler}\r\n                placeholder={placeholder}\r\n                onKeyPress={onKeypress}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchInput;\r\n","import \"./Message.css\";\r\n\r\nconst Message = ({ text }) => {\r\n    return <p className=\"Message\">{text}</p>\r\n}\r\n\r\nexport default Message;\r\n","import { positionColumn, sortColumn } from \"./constantsTable\"\r\n\r\nexport const constants = {\r\n    positionColumn,\r\n    sortColumn\r\n}\r\n","export const positionColumn = {\r\n    LEFT: \"POSITION_COLUMN_LEFT\",\r\n    CENTER: \"POSITION_COLUMN_CENTER\"\r\n}\r\n\r\nexport const sortColumn = {\r\n    NONE: \"NONE\",\r\n    ASCEDING: \"ASCEDING\",\r\n    DESCEDING: \"DESCEDING\"\r\n}\r\n","const Cell = ({id, text, isCenter}) => {\r\n    return (\r\n        <div \r\n            className={`Table__cell ${isCenter ?\"Table__cell_center\" :\"\"}`} \r\n            data-id={id}\r\n        >\r\n            {text || \"—\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cell;\r\n","export default __webpack_public_path__ + \"static/media/filter.eddb4308.svg\";","import { constants } from \"../../../constants\";\r\nimport Cell from \"../Cell/Cell\";\r\nimport svgFilter from \"../filter.svg\";\r\n\r\nconst getClassHeaderCellByPosition = (position) => {\r\n    return position === constants.positionColumn.CENTER\r\n        ? \"Table__cell_center\"\r\n        : \"\";\r\n}\r\n\r\nconst getClassHeaderImgByFilter = (filter) => {\r\n    return filter === constants.sortColumn.DESCEDING\r\n        ? \"Table__header-filter-icon_desceding\"\r\n        : \"\";\r\n}\r\n\r\nconst Column = ({ metaData, arrColumnData, arrRowId }) => {\r\n    return (\r\n        <div\r\n            data-title-column={metaData.titleColumn} \r\n            className=\"Table__column\"\r\n        >\r\n            <h3\r\n                className={`Table__cell Table__header-cell ${getClassHeaderCellByPosition(metaData.position)}`}\r\n            >\r\n                {metaData.titleColumn}\r\n                {\r\n                    metaData.typeFilter !== constants.sortColumn.NONE &&\r\n                    <img\r\n                        className={`Table__header-filter-icon ${getClassHeaderImgByFilter(metaData.typeFilter)}`}\r\n                        src={svgFilter}\r\n                        alt=\"filter\"\r\n                    />\r\n                }\r\n            </h3>\r\n\r\n            <div>\r\n                {\r\n                    arrColumnData.map((text, i) => (\r\n                        <Cell\r\n                            key={arrRowId[i]}\r\n                            text={text}\r\n                            id={arrRowId[i]}\r\n                            isCenter={metaData.position === constants.positionColumn.CENTER}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Column;\r\n","import { useCallback } from 'react';\r\nimport Column from './Column/Column';\r\nimport './Table.css';\r\n\r\nconst Table = ({ \r\n    arrMetaData, matrixColumnData, arrRowId,\r\n    onClickHeaderColumn = (titleColumn) => {},\r\n    onClickCell = (idRow, titleColumn) => {}  \r\n}) => {\r\n    const onClickTable = useCallback((e) => {\r\n        const headerCell = e.target.closest(\".Table__header-cell\");\r\n\r\n        if (headerCell) {\r\n            const tableColumn = headerCell.closest(\".Table__column\");\r\n            onClickHeaderColumn(tableColumn.dataset.titleColumn);\r\n            return false;\r\n        }\r\n\r\n        const cell = e.target.closest(\".Table__cell\");\r\n\r\n        if (cell) {\r\n            const tableColumn = cell.closest(\".Table__column\");\r\n            onClickCell(cell.dataset.id, tableColumn.dataset.titleColumn);\r\n        }\r\n    }, [onClickHeaderColumn, onClickCell]);\r\n\r\n    return (\r\n        <div className=\"Table\" onClick={onClickTable}>\r\n            {\r\n                arrMetaData.map((metaData, i) => (\r\n                    <Column \r\n                        key={metaData.titleColumn}\r\n                        metaData={metaData}\r\n                        arrColumnData={matrixColumnData.length > 0 ?matrixColumnData[i] :[]}\r\n                        arrRowId={matrixColumnData.length > 0 ?arrRowId: []}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table;\r\n","export const apiTable = {\r\n    async getCarsData() {\r\n        const responce = await fetch(\"https://city-mobil.ru/api/cars\");\r\n        return await responce.json();\r\n    }\r\n}\r\n","import { constants } from \"../constants\";\r\n\r\nexport const utilTable = {\r\n    transformApiDataToTableData(apiData) {\r\n        const arrMetaData = this.getArrMetaDataByApiData(apiData);\r\n        const matrixColumnData = this.getMatrixDataByApiData(apiData);\r\n\r\n        return {\r\n            arrMetaData,\r\n            matrixColumnData\r\n        }\r\n    },\r\n\r\n    getArrMetaDataByApiData(apiData) {\r\n        const arrMetaData = apiData.tariffs_list.map((titleColumn, i) => ({\r\n            titleColumn,\r\n            position: constants.positionColumn.CENTER,\r\n            typeFilter: constants.sortColumn.NONE\r\n        }));\r\n\r\n        return [\r\n            {\r\n                titleColumn: \"Марка и модель\",\r\n                position: constants.positionColumn.LEFT,\r\n                typeFilter: constants.sortColumn.NONE\r\n            },\r\n            ...arrMetaData\r\n        ];\r\n    },\r\n\r\n    getMatrixDataByApiData(apiData) {\r\n        const brandAndModel = [];\r\n        const tariffsColumms = apiData.tariffs_list.map(() => []);\r\n\r\n        apiData.cars.forEach((car) => {\r\n            brandAndModel.push(`${car.mark} ${car.model}`)\r\n\r\n            apiData.tariffs_list.forEach((tariff, i) => {\r\n                tariffsColumms[i].push(undefined);\r\n            })\r\n\r\n            Object.keys(car.tariffs).forEach(tariff => {\r\n                const indexTariff = apiData.tariffs_list.indexOf(tariff);\r\n                tariffsColumms[indexTariff][brandAndModel.length - 1] = car.tariffs[tariff].year;\r\n            });\r\n        });\r\n\r\n        return [\r\n            brandAndModel,\r\n            ...tariffsColumms\r\n        ]\r\n    },\r\n\r\n    // сортировка может быть по нескольким колонкам, \r\n    // тогда чем левее колонка (меньше индекс в arrMetaData), тем больше приоритет.\r\n    sortMatrixData(matrixColumnData, arrMetaData) {\r\n        let resMatrix = this.transpose(matrixColumnData);\r\n\r\n        [...arrMetaData].reverse().forEach(({ typeFilter }, i) => {\r\n            const indexColumn = arrMetaData.length - i - 1;\r\n\r\n            if (typeFilter === constants.sortColumn.NONE) {\r\n                return;\r\n            }\r\n\r\n            resMatrix.sort((row1, row2) => {\r\n                const resCompareCell = this.compareCell(row1[indexColumn], row2[indexColumn]);\r\n                const isDesceding = typeFilter === constants.sortColumn.DESCEDING;\r\n\r\n                return isDesceding ?-resCompareCell :resCompareCell;\r\n            })\r\n        });\r\n\r\n        return this.transpose(resMatrix);\r\n    },\r\n\r\n    transpose(matrix) {\r\n        const resMatrix = [...matrix[0].map(() => [])];\r\n\r\n        for (let i = 0; i < matrix.length; i++) {\r\n            for (let j = 0; j < matrix[i].length; j++) {\r\n                resMatrix[j][i] = matrix[i][j];\r\n            }\r\n        }\r\n\r\n        return resMatrix;\r\n    },\r\n\r\n    compareCell(cell1, cell2) {\r\n        if (cell1 === cell2) {\r\n            return 0;\r\n        }\r\n\r\n        if (!cell1) {\r\n            return -1;\r\n        }\r\n\r\n        if (!cell2) {\r\n            return 1;\r\n        }\r\n\r\n        return cell1 > cell2 ?1 :-1;\r\n    },\r\n\r\n    filterMatrixData(matrixColumnData, searchField) {\r\n        const lowerSearchField = searchField.toLowerCase();\r\n\r\n        let resMatrix = this.transpose(matrixColumnData).filter((row) => {\r\n            return row.some(cellValue => {\r\n                const lowerCell = String(cellValue).toLowerCase();\r\n                return lowerCell && lowerCell.includes(lowerSearchField);\r\n            });\r\n        });\r\n\r\n        return resMatrix.length > 0 ?this.transpose(resMatrix) :resMatrix;\r\n    }\r\n}\r\n","import { tableTypeActions } from \"./tableTypes\";\r\n\r\nexport const typeActions = {\r\n    table: tableTypeActions\r\n}\r\n","export const tableTypeActions = {\r\n    CHANGE_ALL_DATA_WITHOUT_FILTERS: \"CHANGE_ALL_DATA_WITHOUT_FILTERS\",\r\n    TOGGLE_FILTER: \"TOGGLE_FILTER\",\r\n    CHANGE_SEARCH_FIELD: \"CHANGE_SEARCH_FIELD\",\r\n    CHANGE_ACTIVE_ROW_ID: \"CHANGE_ACTIVE_ROW_ID\"\r\n}\r\n","import { constants } from \"../../constants\";\r\nimport { typeActions } from \"../types\";\r\n\r\nconst initialState = {\r\n    arrMetaData: [],\r\n    matrixColumnData: [],\r\n    searchField: \"\",\r\n    activeRowId: undefined\r\n}\r\n\r\nexport const reducerTable = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case typeActions.table.CHANGE_ACTIVE_ROW_ID:\r\n            return {\r\n                ...state,\r\n                activeRowId: action.activeRowId\r\n            }\r\n        case typeActions.table.CHANGE_SEARCH_FIELD:\r\n            return {\r\n                ...state,\r\n                searchField: action.searchField\r\n            }\r\n        case typeActions.table.TOGGLE_FILTER:\r\n            return {\r\n                ...state,\r\n                arrMetaData: state.arrMetaData.map(data => {\r\n                    if (data.titleColumn !== action.titleColumn) {\r\n                        return data;\r\n                    }\r\n\r\n                    let typeFilter;\r\n\r\n                    if (data.typeFilter === constants.sortColumn.NONE) {\r\n                        typeFilter = constants.sortColumn.ASCEDING\r\n                    } else if (data.typeFilter === constants.sortColumn.ASCEDING) {\r\n                        typeFilter = constants.sortColumn.DESCEDING\r\n                    } else {\r\n                        typeFilter = constants.sortColumn.NONE\r\n                    }\r\n\r\n                    return {\r\n                        ...data,\r\n                        typeFilter\r\n                    }\r\n                })\r\n            }\r\n        case typeActions.table.CHANGE_ALL_DATA_WITHOUT_FILTERS:\r\n            return {\r\n                ...state,\r\n                arrMetaData: action.arrMetaData,\r\n                matrixColumnData: action.matrixColumnData\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { reducerTable } from \"./reducerTable\";\r\n\r\nexport const reducers = combineReducers({\r\n    reducerTable\r\n});\r\n","import { selectorsTable } from \"./selectorsTable\";\r\n\r\nexport const selectors = {\r\n    ...selectorsTable\r\n}\r\n","export const selectorsTable = {\r\n    getTableArrMetaData(state) {\r\n        return state.reducerTable.arrMetaData;\r\n    },\r\n    getTableMatrixColumnData(state) {\r\n        return state.reducerTable.matrixColumnData;\r\n    },\r\n    getSearchField(state) {\r\n        return state.reducerTable.searchField;\r\n    },\r\n    getActiveRowId(state) {\r\n        return state.reducerTable.activeRowId;\r\n    }\r\n}\r\n","import { actionCreatorsTable } from \"./actionCreatorsTable\";\r\n\r\nexport const actionCreators = {\r\n    table: actionCreatorsTable\r\n}\r\n","import { typeActions } from \"../types\"\r\n\r\nexport const actionCreatorsTable = {\r\n    changeAllDataWithoutFilters(arrMetaData, matrixColumnData) {\r\n        return {\r\n            type: typeActions.table.CHANGE_ALL_DATA_WITHOUT_FILTERS,\r\n            arrMetaData,\r\n            matrixColumnData\r\n        }\r\n    },\r\n    toggleFilter(titleColumn) {\r\n        return {\r\n            type: typeActions.table.TOGGLE_FILTER,\r\n            titleColumn\r\n        }\r\n    },\r\n    changeSearchField(searchField) {\r\n        return {\r\n            type: typeActions.table.CHANGE_SEARCH_FIELD,\r\n            searchField\r\n        }\r\n    },\r\n    changeActiveRowId(activeRowId) {\r\n        return {\r\n            type: typeActions.table.CHANGE_ACTIVE_ROW_ID,\r\n            activeRowId\r\n        }\r\n    }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport { reducers } from \"./reducers\";\r\nimport { selectors } from \"./selectors\";\r\nimport { typeActions } from \"./types\";\r\nimport { actionCreators } from \"./action-creators\";\r\n\r\nexport const store = createStore(reducers);\r\nexport { selectors }\r\nexport { typeActions }\r\nexport { actionCreators }\r\n","import Button from \"../Button/Button\";\r\nimport SearchInput from \"../SearchInput/SearchInput\";\r\nimport Message from \"../Message/Message\";\r\nimport style from \"./Main.module.css\";\r\nimport Table from \"../Table/Table\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { apiTable } from \"../../api\";\r\nimport { utilTable } from \"../../util/utilTable\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { actionCreators, selectors } from \"../../store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelectFilterAndSortMatrixData } from \"../../hooks/useSelectFilterAndSortMatrixData\";\r\nimport { useSelectNameActiveRow } from \"../../hooks/useSelectNameActiveRow\";\r\n\r\nconst Main = () => {\r\n    const arrMetaData = useSelector(selectors.getTableArrMetaData);\r\n    const searchFieldStore = useSelector(selectors.getSearchField);\r\n    const acriveRow = useSelectNameActiveRow();\r\n    const matrixColumnData = useSelectFilterAndSortMatrixData();\r\n\r\n    const [searchField, changeSearchField] = useState(searchFieldStore);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeAllDataWithoutFilters = useCallback((arrMetaData, matrixColumnData) => {\r\n        dispatch(actionCreators.table.changeAllDataWithoutFilters(arrMetaData, matrixColumnData));\r\n    }, [dispatch]);\r\n\r\n    const toggleFilter = useCallback((titleColumn) => {\r\n        dispatch(actionCreators.table.toggleFilter(titleColumn));\r\n    }, [dispatch]);\r\n\r\n    const changeSearchFieldStore = useCallback((searchField) => {\r\n        dispatch(actionCreators.table.changeSearchField(searchField));\r\n    }, [dispatch]);\r\n\r\n    const changeActiveRowId = useCallback((activeRowId) => {\r\n        dispatch(actionCreators.table.changeActiveRowId(activeRowId));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const apiData = await apiTable.getCarsData();\r\n            const { arrMetaData, matrixColumnData } = utilTable.transformApiDataToTableData(apiData);\r\n            changeAllDataWithoutFilters(arrMetaData, matrixColumnData);\r\n        })();\r\n    }, []);\r\n\r\n\r\n    const onClickHeaderColumn = useCallback((titleColumn) => {\r\n        toggleFilter(titleColumn);\r\n    }, [toggleFilter]);\r\n\r\n    const onClickCell = useCallback((idRow) => {\r\n        changeActiveRowId(idRow);\r\n    }, [changeActiveRowId]);\r\n\r\n    const search = () => {\r\n        changeSearchFieldStore(searchField);\r\n    }\r\n\r\n    const onKeypressSearchInput = ({ key }) => {\r\n        if (key === \"Enter\") {\r\n            search();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.Main}>\r\n            <div className={style.Main__container}>\r\n                <div className={style.searchField}>\r\n                    <div className={style.searchField__input}>\r\n                        <SearchInput\r\n                            value={searchField}\r\n                            onChange={changeSearchField}\r\n                            onKeypress={onKeypressSearchInput}\r\n                            placeholder=\"Найти\"\r\n                        />\r\n                    </div>\r\n\r\n                    <Button text=\"Найти\" onClick={search} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`${style.Main__container} ${style.Main__table}`}>\r\n                <Table\r\n                    arrMetaData={arrMetaData}\r\n                    matrixColumnData={matrixColumnData}\r\n                    arrRowId={matrixColumnData[0]}\r\n                    onClickCell={onClickCell}\r\n                    onClickHeaderColumn={onClickHeaderColumn}\r\n                />\r\n            </div>\r\n\r\n            {\r\n                searchFieldStore && matrixColumnData.length === 0 && arrMetaData.length > 0 &&\r\n                <div className={style.Main__container}>\r\n                    <Message text={`${searchFieldStore} не найдено`} />\r\n                </div>\r\n            }\r\n\r\n            {\r\n                acriveRow &&\r\n                <div className={style.Main__container}>\r\n                    <Message text={`Выбран автомобиль ${acriveRow} года выпуска`} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectors } from \"../store\";\r\n\r\n// Возвращает `${марка} ${модель} ${минимальный год}`, если выбран activeRowId, иначе возвращается undefined.\r\n// Как я понял из примера (Выбран автомобиль Audi A4 2005 года выпуска),\r\n// 2005 год это минимальный год среди всех в tariffs.\r\nexport const useSelectNameActiveRow = () => {\r\n    const activeRowId = useSelector(selectors.getActiveRowId);\r\n    const matrixColumnData = useSelector(selectors.getTableMatrixColumnData);\r\n\r\n    if (!activeRowId) {\r\n        return undefined;\r\n    }\r\n\r\n    const indexRow = matrixColumnData[0].findIndex(cellValue => cellValue === activeRowId);\r\n\r\n    const markAndModel = matrixColumnData[0][indexRow];\r\n\r\n    let minYear = matrixColumnData[1][indexRow];\r\n    \r\n    for(let indexColumn = 2; indexColumn < matrixColumnData.length; indexColumn++) {\r\n        minYear = Math.min(minYear, matrixColumnData[1][indexRow]);\r\n    }\r\n\r\n    return `${markAndModel} ${minYear}`;\r\n}\r\n","import { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectors } from \"../store\";\r\nimport { utilTable } from \"../util/utilTable\";\r\n\r\nexport const useSelectFilterAndSortMatrixData = () => {\r\n    const arrMetaData = useSelector(selectors.getTableArrMetaData);\r\n    const searchFieldStore = useSelector(selectors.getSearchField);\r\n    let matrixColumnData = useSelector(selectors.getTableMatrixColumnData);\r\n\r\n    matrixColumnData = useMemo(() => {\r\n        if (matrixColumnData.length === 0) {\r\n            return matrixColumnData;\r\n        }\r\n\r\n        return utilTable.filterMatrixData(matrixColumnData, searchFieldStore);\r\n    }, [searchFieldStore, matrixColumnData]);\r\n\r\n    matrixColumnData = useMemo(() => {\r\n        if (matrixColumnData.length === 0) {\r\n            return matrixColumnData;\r\n        }\r\n\r\n        return utilTable.sortMatrixData(matrixColumnData, arrMetaData);\r\n    }, [arrMetaData, matrixColumnData]);\r\n\r\n    return matrixColumnData;\r\n}\r\n","import './App.css';\nimport Main from './components/Main/Main';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App__header\">\n                header\n            </header>\n\n            <nav className=\"App__navbar\">\n                sidebar\n            </nav>\n\n            <main className=\"App__main\">\n                <Main/>\n            </main>\n\n            <footer className=\"App__footer\">\n                footer\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__1nXpt\",\"Main__container\":\"Main_Main__container__2IHsO\",\"Main__table\":\"Main_Main__table__NbeQB\",\"searchField\":\"Main_searchField__3qwpx\",\"searchField__input\":\"Main_searchField__input__sBOdo\"};"],"sourceRoot":""}